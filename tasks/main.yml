- name: rbenv | install build depends
  apt: pkg=$item state=latest install_recommends=no
  with_items:
    - build-essential
    - git
    - libcurl4-openssl-dev
    - libreadline-dev
    - libssl-dev
    - libxml2-dev
    - libxslt1-dev
    - zlib1g-dev
  tags:
    - rbenv

- name: rbenv | update rbenv repo
  git: repo=git://github.com/sstephenson/rbenv.git dest={{ rbenv_root }} version={{ rbenv_version }}
  enviroment: {{ rbenv_type }}_env
  tags:
    - rbenv

- name: rbenv | create plugins directory
  file: state=directory path={{ rbenv_root }}/plugins
  enviroment: {{ rbenv_type }}_env
  tags:
    - rbenv

- name: rbenv | install plugins
  git: repo={{ item.repo }} dest={{ rbenv_root }}/plugins/{{ item.name }} version={{ item.veersion }}
  enviroment: {{ rbenv_type }}_env
  with_items: $rbenv_plugins
  tags:
    - rbenv

- name: rbenv | add rbenv initialization to profile
  template: src=rbenv.sh.j2 dest=/etc/profile.d/rbenv.sh owner=root group=root mode=0755
  tags:
    - rbenv

- name: rbenv | set default-gems
  copy: src=default-gems dest={{ rbenv_root }}/default-gems owner={{ user }} group={{ user }} mode=0644
  enviroment: {{ rbenv_type }}_env
  tags:
    - rbenv

- name: rbenv | set gemrc
  copy: src=gemrc dest=/{{ user }}/.gemrc owner={{ user }} group={{ user }} mode=0644
  tags:
    - rbenv

- name: rbenv | set gemrc
  copy: src=vars dest={{ rbenv_root }}/vars owner={{ user }} group={{ user }} mode=0644
  tags:
    - rbenv

- name: rbenv | check ruby $rbenv_ruby_version installed
  shell: RBENV_ROOT={{ rbenv_root }} rbenv versions | grep $rbenv_ruby_version
  enviroment: {{ rbenv_type }}_env
  register: ruby_installed
  ignore_errors: yes
  tags:
    - rbenv

- name: rbenv | install ruby $rbenv_ruby_version
  shell: RBENV_ROOT={{ rbenv_root }} rbenv install $rbenv_ruby_version
  enviroment: {{ rbenv_type }}_env
  when: ruby_installed.rc != 0
  tags:
    - rbenv

- name: rbenv | set global ruby $rbenv_ruby_version
  shell: RBENV_ROOT={{ rbenv_root }} rbenv global $rbenv_ruby_version
  enviroment: {{ rbenv_type }}_env
  when: ruby_installed.rc != 0
  tags:
    - rbenv

- name: rbenv | rehash
  shell: RBENV_ROOT={{ rbenv_root }} rbenv rehash
  enviroment: {{ rbenv_type }}_env
  when: ruby_installed.rc != 0
  tags:
    - rbenv
